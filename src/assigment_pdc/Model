
// this class is for storing the questions and the level so we can get rid of the 
import java.util.Observable;

public class Model extends Observable {
    private final Data data;
    private String username; 

    
    private final String[] easyQuestions = {
        "What is the capital of France?",
        "Who is the current President of the United States?",
        "Which planet is known as the Red Planet?"
    };
    private final String[] easyAnswers = {
        "Paris", // Capital of France
        "Joe Biden", // Current President of the United States
        "Mars" // Red Planet
    };
    
    

    public Model() {
        this.data = new Data();
    }

    // Method to check user credentials
    public void checkName(String username, String password) {
        this.username = username;
        this.data.loginFlag = checkUser(username, password); 
        if (this.data.loginFlag) {
            startLevel(Difficulty.EASY); 
        }
        setChanged();
        notifyObservers(this.data);
    }

   
    private void startLevel(Difficulty difficulty) {
        switch (difficulty) {
            case EASY:
                this.data.question = easyQuestions[0];
                this.data.choices = easyAnswers; 
                break;
            
        }
        setChanged();
        notifyObservers(this.data);
    }


    public void checkAnswer(String answer) {
        if (answerIsValid(answer)) {
            
            if (answer.equalsIgnoreCase(this.data.correctAnswer)) {
                this.data.currentScore += 10; 
                this.data.currentScore -= 5; 
            }
            
            
            this.data.question = easyQuestions[1]; 
            this.data.choices = easyAnswers; 
            setChanged();
            notifyObservers(this.data);
        } else {
            
            this.data.question = "Invalid input. Please try again.";
            setChanged();
            notifyObservers(this.data);
        }
    }

   
    public void quitGame() {
        
        this.data.quitFlag = true;
        setChanged();
        notifyObservers(this.data);
    }

    
    private boolean answerIsValid(String answer) {
        return !answer.isEmpty();
    }

    
    private boolean checkUser(String username, String password) {
        
        return true;
    }

    
    public enum Difficulty {
        EASY,
        MEDIUM,
        HARD
    }
}


